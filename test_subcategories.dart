import 'dart:convert';

import 'package:http/http.dart' as http;

// Script pour tester les sous-cat√©gories et les vid√©os associ√©es
void main() async {
  print('üß™ Test des sous-cat√©gories du th√®me Pri√®re');
  
  const String prayerThemeId = "33b5b607-10f7-4b40-a1ad-8becbcfa7983";
  
  // Sous-cat√©gories pr√©d√©finies du th√®me Pri√®re
  final List<String> prayerSubcategories = [
    'Les ablutions',
    'Le ghusl (lavage)',
    'Le Tayammum',
    'Les r√®gles',
    'Istikhara (demande)',
    'Istisqa (pluie)',
    'Vendredi',
    'Les 5 pri√®res obligatoires',
    'Les 12 rawatib',
    'Mortuaire',
    'Pri√®re de nuit',
    'Salat Doha (jour montant)',
    'Salat al koussouf (√©clipse)',
    'Pri√®re du voyageur',
  ];
  
  try {
    print('\n1Ô∏è‚É£ R√©cup√©ration des vid√©os du th√®me Pri√®re...');
    final url = Uri.parse('https://3ilmnafi3.digilocx.fr/api/videos/isvalid/theme/$prayerThemeId');
    final response = await http.get(url);
    
    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      final List videosJson = data['videos'] ?? [];
      
      print('‚úÖ ${videosJson.length} vid√©os trouv√©es pour le th√®me Pri√®re');
      
      // Compter les vid√©os par sous-cat√©gorie
      Map<String, int> counts = {};
      Map<String, List<String>> videosBySubcategory = {};
      
      for (final videoJson in videosJson) {
        final videoTitle = videoJson['title'] ?? 'Sans titre';
        final subcategories = List<String>.from(videoJson['subcategories'] ?? []);
        
        print('üìπ $videoTitle');
        print('   Sous-cat√©gories: $subcategories');
        
        for (final subcategory in subcategories) {
          counts[subcategory] = (counts[subcategory] ?? 0) + 1;
          videosBySubcategory[subcategory] ??= [];
          videosBySubcategory[subcategory]!.add(videoTitle);
        }
      }
      
      print('\n2Ô∏è‚É£ Statistiques par sous-cat√©gorie:');
      for (final subcategory in prayerSubcategories) {
        final count = counts[subcategory] ?? 0;
        print('üìÇ $subcategory: $count vid√©os');
        
        if (count > 0) {
          final videos = videosBySubcategory[subcategory] ?? [];
          for (int i = 0; i < videos.length; i++) {
            print('   ${i + 1}. ${videos[i]}');
          }
        }
        print('');
      }
      
      print('3Ô∏è‚É£ Sous-cat√©gories non d√©finies trouv√©es dans les vid√©os:');
      for (final entry in counts.entries) {
        if (!prayerSubcategories.contains(entry.key)) {
          print('‚ùì "${entry.key}": ${entry.value} vid√©os');
        }
      }
      
    } else {
      print('‚ùå Erreur HTTP: ${response.statusCode}');
    }
    
  } catch (e) {
    print('‚ùå Erreur: $e');
  }
  
  print('\nüìù Instructions:');
  print('1. Les sous-cat√©gories avec 0 vid√©os appara√Ætront dans l\'interface');
  print('2. Cliquer sur une sous-cat√©gorie navigue vers ses vid√©os');  
  print('3. Les sous-cat√©gories vides afficheront "Aucune vid√©o trouv√©e"');
  print('4. Utilisez ce test pour v√©rifier la coh√©rence des donn√©es');
}